#!/usr/bin/python
# -*- coding:utf-8 -*-
#author:Jumbo
#website:www.chinabaiker.com
import argparse
import sys
from modules import domain
from modules import dir
from modules import appscan
from modules import brute_pass
from modules import subdomain_brute





def help():
    print "-h --help Show basic help message and exit"
    print "-u --url  Target URL/Appscan Id/Brute_pass url"
    print "-d --dict  Dir_Dict"
    print "-e --errorkey  Dir_errorkey"
    print "-s --save_path  Dir_save_path"
    print "-t --thread  Dir_thread"
    print "-m --module Module(Domain/Dir/Appscan/Brute_pass)"
    print "-a --sdomain Subdomain_brute_domain"
    print "JPentest.py -m Domain -u chinabaiker.com"
    print "JPentest.py -m Dir -u https://www.chinabaiker.com -d dir.txt -s saveok.txt -e \"sorry\" -t 20"
    print "JPentest.py -m Appscan -u http://appscan.io/app-report.html?id=your appscan id"
    print "JPentest.py -m Brute_pass -u http://www.chinabaiker.com/login.php"
    print "JPentest.py -m Subdomain_brute -a chinabaiker.com -t 50"

if len(sys.argv) < 2:
    help()

parser = argparse.ArgumentParser()
parser.add_argument('-u','--url', help='Target URL/Appscan Id/Brute_pass url')
parser.add_argument('-d','--dict', help='Dir_Dict')
parser.add_argument('-e','--errorkey', help='Dir_errorkey')
parser.add_argument('-s','--save_path', help='Dir_save_path')
parser.add_argument('-t','--thread', help='Dir_thread')
parser.add_argument('-m','--module', help='Module(Domain/Dir/Appscan/Brute_pass)')
parser.add_argument('-a','--sdomain', help='Subdomain_brute_domain')
args = parser.parse_args()





if args.url and args.module == 'Domain':		
	domain.main(args.url)

elif args.url and args.dict and args.errorkey and args.save_path and args.thread and args.module == 'Dir':
	# dir_scanner = Dir(url,dict,errorkey,save_path)
	# dir_scanner.dir_scanner()
    dir.main(args.url,args.dict,args.errorkey,args.save_path,args.thread)

elif args.url and args.module == 'Appscan':
    appscan.main(args.url)

elif args.url and args.module == 'Brute_pass':
    brute_pass.main(args.url)


elif args.sdomain and args.thread and args.module == 'Subdomain_brute':
    subdomain_brute.main(args.sdomain,args.thread)
